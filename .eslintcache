[{"/Users/Steven/GitHub Store 2020/18-Circle_Answer_with_React/src/index.js":"1","/Users/Steven/GitHub Store 2020/18-Circle_Answer_with_React/src/reportWebVitals.js":"2","/Users/Steven/GitHub Store 2020/18-Circle_Answer_with_React/src/App.js":"3","/Users/Steven/GitHub Store 2020/18-Circle_Answer_with_React/src/components/mainCircle.js":"4","/Users/Steven/GitHub Store 2020/18-Circle_Answer_with_React/src/components/textOnRing.js":"5","/Users/Steven/GitHub Store 2020/18-Circle_Answer_with_React/src/components/8sliceRings.js":"6"},{"size":500,"mtime":1610850831738,"results":"7","hashOfConfig":"8"},{"size":362,"mtime":1610850831740,"results":"9","hashOfConfig":"8"},{"size":244,"mtime":1610868872263,"results":"10","hashOfConfig":"8"},{"size":10858,"mtime":1611043503298,"results":"11","hashOfConfig":"8"},{"size":448,"mtime":1610960297443,"results":"12","hashOfConfig":"8"},{"size":6791,"mtime":1610960579088,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"zu2bv7",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/Steven/GitHub Store 2020/18-Circle_Answer_with_React/src/index.js",[],["29","30"],"/Users/Steven/GitHub Store 2020/18-Circle_Answer_with_React/src/reportWebVitals.js",[],"/Users/Steven/GitHub Store 2020/18-Circle_Answer_with_React/src/App.js",[],"/Users/Steven/GitHub Store 2020/18-Circle_Answer_with_React/src/components/mainCircle.js",["31","32","33","34","35","36","37","38","39","40","41","42","43","44","45","46","47","48","49","50","51","52"],"import { useState } from \"react\";\nimport { TextOnRing } from \"./textOnRing\";\nimport mag from './img/Magnifier.svg'\nimport vis from './img/VisitArrow.svg'\nimport wrong from './img/wrong.png'\nimport wrong1 from './img/wrong1.png'\n\nexport const MainCircle = () => {\n  const colorMap = [\n    [\n      \"white\", \"white\", \"white\",  \"white\", \"white\", \"white\", \"gray\",\n      \"gray\", \"gray\",\n    ],\n    [\n      \"red\",\n      \"white\",\n      \"white\",\n      \"white\",\n      \"white\",\n      \"white\",\n      \"gray\",\n      \"gray\",\n      \"gray\",\n    ],\n    [\"red\", \"red\", \"white\", \"white\", \"white\", \"white\", \"gray\", \"gray\", \"gray\"],\n    [\"red\", \"red\", \"red\", \"white\", \"white\", \"white\", \"gray\", \"gray\", \"gray\"],\n    [\"red\", \"red\", \"red\", \"red\", \"white\", \"white\", \"gray\", \"gray\", \"gray\"],\n    [\"red\", \"red\", \"red\", \"red\", \"red\", \"white\", \"gray\", \"gray\", \"gray\"],\n    [\"red\", \"red\", \"red\", \"red\", \"red\", \"red\", \"gray\", \"gray\", \"gray\"],\n    [\"red\", \"red\", \"red\", \"red\", \"red\", \"red\", \"red\", \"gray\", \"gray\"],\n    [\"red\", \"red\", \"red\", \"red\", \"red\", \"red\", \"red\", \"red\", \"red\"],\n    [\"red\", \"red\", \"red\", \"red\", \"red\", \"red\", \"red\", \"red\", \"red\"],\n  ];\n\n  const [currentColors, setColorList] = useState(colorMap[0]);\n  const [stop, setStop] = useState(false);\n\n  const innnerRing = {\n    zIndex: 211,\n    border: \"2px solid red\",\n    position: \"absolute\",\n    clip: \"rect(0 1000px 440px 50px)\",\n    opacity: 0.2,\n    top: 0,\n    left: 0,\n  };\n\n  const innnerRingLeft = {\n    zIndex: 211,\n    border: \"2px solid red\",\n    position: \"absolute\",\n    clip: \"rect(450px 445px 1000px 50px)\",\n    opacity: 0.2,\n    top: 0,\n    left: 0,\n  };\n\n  const innnerRingRight = {\n    zIndex: 211,\n    border: \"2px solid red\",\n    position: \"absolute\",\n    clip: \"rect(450px 1000px 1000px 455px)\",\n    opacity: 0.2,\n    top: 0,\n    left: 0,\n  };\n\n  const outerRing = {\n    zIndex: 1,\n    border: \"2px solid blue\",\n    position: \"absolute\",\n    opacity: 0.4,\n    top: 0,\n    left: 0,\n  };\n\n  const dashRing = {\n    zIndex: 1,\n    position: \"absolute\",\n    opacity: 1,\n    strokeDasharray: \"150 10\",\n    strokeDashoffset: \"-10\",\n    top: 0,\n    left: 0,\n  };\n\n  const button = {\n    cursor: \"pointer\",\n    zIndex: 6000,\n    marginLeft: 500,\n  };\n\n  const button1 = {\n    cursor: \"pointer\",\n    zIndex: 100,\n    marginLeft: 580,\n  };\n\n  const h1 = {\n    textAlign: \"center\",\n    marginTop: \"60px\",\n    marginBottom: \"30px\",\n  };\n\n  const nameStyle = {\n    position: 'absolute',\n    fontSize: 18,\n    top: 290,\n    left: 295,\n  }\n\n  const circular = {\n    zIndex: 1000,\n    margin: \"0 auto\",\n    width: \"10em\",\n    height: \"10em\",\n  };\n\n  const svg = {\n    display: \"block\",\n    overflow: \"visible\",\n  };\n\n  const getColor = (position) => {\n    return currentColors[position];\n  };\n\n  const getOffSet = (offset) => {\n    return {\n      zIndex: 10,\n      position: \"absolute\",\n      opacity: 1,\n      strokeDasharray: \"150 2000\",\n      strokeDashoffset: offset,\n      top: 0,\n      left: 0,\n    };\n  };\n\n  var interval;\n  var counter = 0;\n\n  const getName = () => {\n    var counter = 0\n    currentColors.forEach(each => {\n      if (each == 'red') counter++\n    })\n    if (counter === 0 ) return 'Broken'\n    else if (counter === 8 ) return 'Broken'\n    else  return `Lit${counter}`\n  };\n\n  const getLitNum = () => {\n    var counter = 0\n    currentColors.forEach(each => {\n      if (each == 'red') counter++\n    })\n    return counter\n  };\n\n  const isPositionRed = (position) => {\n    var counter = 0\n    if(currentColors[position-1]==='red') return true\n    else return false\n   };\n\n  const demo ={\n    width: \"600px\",\n    height: \"600px\",\n    backgroundColor: \"#000000\",\n    padding: \"100px\",\n    boxSizing: \"borderBox\",\n  }\n\n  const myWrong={\n    position: 'absolute',\n    top: 150,\n    left: 150,\n    zIndex: 20000,\n    \n  }\n\n  console.log('currentColors789123',currentColors);\n\n  const opacityStyle = {width:40, zIndex: 20000}\n  const opacityStyleNull = {width: 40, zIndex: 20000, opacity: 0}\n  \n  return (\n    <>\n      <button\n        style={button}\n        onClick={() => {\n          window.setInterval(function () {\n            if (counter === 7) {\n              counter = 0;\n            } else {\n              counter = counter + 1;\n              setColorList(colorMap[counter]);\n            }\n            console.log('counter2', counter);\n          }, 1400);\n          console.log('counter1', counter);\n        }}>\n        Start\n      </button>\n\n      <div>\n        <svg\n          className='innerRing'\n          height='1000'\n          width='1000'\n          style={innnerRing}>\n          <circle\n            cx='450'\n            cy='450'\n            r='118'\n            stroke='white'\n            stroke-width='60'\n            fill='#6095BBF7'\n          />\n        </svg>\n\n        <svg\n          className='innerRing'\n          height='1000'\n          width='1000'\n          style={innnerRingLeft}>\n          <circle\n            cx='450'\n            cy='450'\n            r='118'\n            stroke='white'\n            stroke-width='60'\n            fill='#6095BBF7'\n          />\n        </svg>\n\n        <svg\n          className='innerRing'\n          height='1000'\n          width='1000'\n          style={innnerRingRight}>\n          <circle\n            cx='450'\n            cy='450'\n            r='118'\n            stroke='white'\n            stroke-width='60'\n            fill='#6095BBF7'\n          />\n        </svg>\n\n        <svg height='1000' width='1000' style={outerRing}>\n          <circle\n            cx='450'\n            cy='450'\n            r='200'\n            stroke='white'\n            stroke-width='80'\n            fill-opacity='0'\n          />\n        </svg>\n\n        {/* const colorMap = [\n    [\n      \"white\", \"white\", \"white\",  \"white\", \"white\", \"white\", \"gray\",\n      \"gray\", \"gray\",\n    ],\n    [\n      \"red\",\n      \"white\",\n      \"white\",\n      \"white\",\n      \"white\",\n      \"white\",\n      \"gray\",\n      \"gray\",\n      \"gray\",\n    ],\n    3[\"red\", \"red\", \"white\", \"white\", \"white\", \"white\", \"gray\", \"gray\", \"gray\"],\n    4[\"red\", \"red\", \"red\", \"white\", \"white\", \"white\", \"gray\", \"gray\", \"gray\"],\n    5[\"red\", \"red\", \"red\", \"red\", \"white\", \"white\", \"gray\", \"gray\", \"gray\"],\n    6[\"red\", \"red\", \"red\", \"red\", \"red\", \"white\", \"gray\", \"gray\", \"gray\"],\n    7[\"red\", \"red\", \"red\", \"red\", \"red\", \"red\", \"gray\", \"gray\", \"gray\"],\n    8[\"red\", \"red\", \"red\", \"red\", \"red\", \"red\", \"red\", \"gray\", \"gray\"],\n    9[\"red\", \"red\", \"red\", \"red\", \"red\", \"red\", \"red\", \"red\", \"red\"],\n    10[\"red\", \"red\", \"red\", \"red\", \"red\", \"red\", \"red\", \"red\", \"red\"],\n  ]; */}\n        \n        <div className='myWrong' style={myWrong}>\n          <ul>\n            <li><img src={wrong1} style={isPositionRed(3)? opacityStyle: opacityStyleNull}/></li>\n            <li><img src={wrong1} style={isPositionRed(4)? opacityStyle: opacityStyleNull}/></li>\n            <li><img src={wrong1} style={isPositionRed(5)? opacityStyle: opacityStyleNull}/></li>\n            <li><img src={wrong1} style={isPositionRed(6)? opacityStyle: opacityStyleNull}/></li>\n            <li><img src={wrong1} style={isPositionRed(7)? opacityStyle: opacityStyleNull}/></li>\n            <li><img src={wrong1} style={isPositionRed(8)? opacityStyle: opacityStyleNull}/></li>\n            <li><img src={wrong1} style={isPositionRed(1)? opacityStyle: opacityStyleNull}/></li>\n            <li><img src={wrong1} style={isPositionRed(2)? opacityStyle: opacityStyleNull}/></li>\n \n          </ul>\n        </div>\n\n\n\n        {/* ---------------------- Slice 1 ----------------------  */}\n        <svg height='1000' width='1000' style={getOffSet(\"-650\")}>\n          <circle\n            cx='450'\n            cy='450'\n            r='200'\n            stroke={getColor(0)}\n            stroke-width='25'\n            fill='#6095BBF7'\n            fill-opacity='0'\n          />\n        </svg>\n\n        {/* ---------------------- Slice 2 ----------------------  */}\n        <svg height='1000' width='1000' style={getOffSet(\"-810\")}>\n          <circle\n            cx='450'\n            cy='450'\n            r='200'\n            stroke={getColor(1)}\n            stroke-width='25'\n            fill='#6095BBF7'\n            fill-opacity='0'\n          />\n        </svg>\n\n        {/* ---------------------- Slice 3 ----------------------  */}\n        <svg height='1000' width='1000' style={getOffSet(\"-970\")}>\n          <circle\n            cx='450'\n            cy='450'\n            r='200'\n            stroke={getColor(2)}\n            stroke-width='25'\n            fill='#6095BBF7'\n            fill-opacity='0'\n          />\n        </svg>\n\n        {/* ---------------------- Slice 4 ----------------------  */}\n        <svg height='1000' width='1000' style={getOffSet(\"-1130\")}>\n          <circle\n            cx='450'\n            cy='450'\n            r='200'\n            stroke={getColor(3)}\n            stroke-width='25'\n            fill='#6095BBF7'\n            fill-opacity='0'\n          />\n        </svg>\n\n        {/* ---------------------- Slice 5 ----------------------  */}\n        <svg height='1000' width='1000' style={getOffSet(\"-10\")}>\n          <circle\n            cx='450'\n            cy='450'\n            r='200'\n            stroke={getColor(4)}\n            stroke-width='25'\n            fill='#6095BBF7'\n            fill-opacity='0'\n          />\n        </svg>\n\n        {/* ---------------------- Slice 6 ----------------------  */}\n        <svg height='1000' width='1000' style={getOffSet(\"-170\")}>\n          <circle\n            cx='450'\n            cy='450'\n            r='200'\n            stroke={getColor(5)}\n            stroke-width='25'\n            fill='#6095BBF7'\n            fill-opacity='0'\n          />\n        </svg>\n\n        {/* ---------------------- Slice 7 ----------------------  */}\n        <svg height='1000' width='1000' style={getOffSet(\"-330\")}>\n          <circle\n            cx='450'\n            cy='450'\n            r='200'\n            stroke={getColor(6)}\n            stroke-width='25'\n            fill='#6095BBF7'\n            fill-opacity='0'\n          />\n        </svg>\n\n        {/* ---------------------- Slice 8 ----------------------  */}\n        <svg height='1000' width='1000' style={getOffSet(\"-490\")}>\n          <circle\n            cx='450'\n            cy='450'\n            r='200'\n            stroke={getColor(7)}\n            stroke-width='25'\n            fill='#6095BBF7'\n            fill-opacity='0'\n          />\n        </svg>\n      </div>\n\n      <div class='circular' style={nameStyle}>\n        <svg viewBox='0 0 100 100'>\n          <path d='M 0,50 a 50,50 0 1,1 0,1 z' id='circle' />\n          <text>\n            <textPath xlinkHref='#circle'> Name: {getName()} </textPath>\n          </text>\n        </svg>\n\n        <img style={{width: 50, position: 'relative', right: 50, bottom: 30}} src={mag} alt=''/>\n        <img style={{width: 40, position: 'relative', right: -70, bottom: 40}} src={vis} alt=''/>\n      </div>\n    </>\n  );\n};\n","/Users/Steven/GitHub Store 2020/18-Circle_Answer_with_React/src/components/textOnRing.js",[],["53","54"],"/Users/Steven/GitHub Store 2020/18-Circle_Answer_with_React/src/components/8sliceRings.js",["55","56"],{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","severity":1,"message":"62","line":2,"column":10,"nodeType":"63","messageId":"64","endLine":2,"endColumn":20},{"ruleId":"61","severity":1,"message":"65","line":5,"column":8,"nodeType":"63","messageId":"64","endLine":5,"endColumn":13},{"ruleId":"61","severity":1,"message":"66","line":36,"column":10,"nodeType":"63","messageId":"64","endLine":36,"endColumn":14},{"ruleId":"61","severity":1,"message":"67","line":36,"column":16,"nodeType":"63","messageId":"64","endLine":36,"endColumn":23},{"ruleId":"61","severity":1,"message":"68","line":77,"column":9,"nodeType":"63","messageId":"64","endLine":77,"endColumn":17},{"ruleId":"61","severity":1,"message":"69","line":93,"column":9,"nodeType":"63","messageId":"64","endLine":93,"endColumn":16},{"ruleId":"61","severity":1,"message":"70","line":99,"column":9,"nodeType":"63","messageId":"64","endLine":99,"endColumn":11},{"ruleId":"61","severity":1,"message":"71","line":112,"column":9,"nodeType":"63","messageId":"64","endLine":112,"endColumn":17},{"ruleId":"61","severity":1,"message":"72","line":140,"column":7,"nodeType":"63","messageId":"64","endLine":140,"endColumn":15},{"ruleId":"73","severity":1,"message":"74","line":146,"column":16,"nodeType":"75","messageId":"76","endLine":146,"endColumn":18},{"ruleId":"61","severity":1,"message":"77","line":153,"column":9,"nodeType":"63","messageId":"64","endLine":153,"endColumn":18},{"ruleId":"73","severity":1,"message":"74","line":156,"column":16,"nodeType":"75","messageId":"76","endLine":156,"endColumn":18},{"ruleId":"61","severity":1,"message":"78","line":162,"column":9,"nodeType":"63","messageId":"64","endLine":162,"endColumn":16},{"ruleId":"61","severity":1,"message":"79","line":167,"column":9,"nodeType":"63","messageId":"64","endLine":167,"endColumn":13},{"ruleId":"80","severity":1,"message":"81","line":292,"column":17,"nodeType":"82","endLine":292,"endColumn":93},{"ruleId":"80","severity":1,"message":"81","line":293,"column":17,"nodeType":"82","endLine":293,"endColumn":93},{"ruleId":"80","severity":1,"message":"81","line":294,"column":17,"nodeType":"82","endLine":294,"endColumn":93},{"ruleId":"80","severity":1,"message":"81","line":295,"column":17,"nodeType":"82","endLine":295,"endColumn":93},{"ruleId":"80","severity":1,"message":"81","line":296,"column":17,"nodeType":"82","endLine":296,"endColumn":93},{"ruleId":"80","severity":1,"message":"81","line":297,"column":17,"nodeType":"82","endLine":297,"endColumn":93},{"ruleId":"80","severity":1,"message":"81","line":298,"column":17,"nodeType":"82","endLine":298,"endColumn":93},{"ruleId":"80","severity":1,"message":"81","line":299,"column":17,"nodeType":"82","endLine":299,"endColumn":93},{"ruleId":"57","replacedBy":"83"},{"ruleId":"59","replacedBy":"84"},{"ruleId":"61","severity":1,"message":"85","line":1,"column":10,"nodeType":"63","messageId":"64","endLine":1,"endColumn":18},{"ruleId":"61","severity":1,"message":"86","line":10,"column":9,"nodeType":"63","messageId":"64","endLine":10,"endColumn":17},"no-native-reassign",["87"],"no-negated-in-lhs",["88"],"no-unused-vars","'TextOnRing' is defined but never used.","Identifier","unusedVar","'wrong' is defined but never used.","'stop' is assigned a value but never used.","'setStop' is assigned a value but never used.","'dashRing' is assigned a value but never used.","'button1' is assigned a value but never used.","'h1' is assigned a value but never used.","'circular' is assigned a value but never used.","'interval' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'getLitNum' is assigned a value but never used.","'counter' is assigned a value but never used.","'demo' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["87"],["88"],"'useState' is defined but never used.","'colorMap' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]